package com.auth.entity.dao;import com.auth.constants.ManagerConstants;import com.baomidou.mybatisplus.annotation.FieldFill;import com.baomidou.mybatisplus.annotation.IdType;import com.baomidou.mybatisplus.annotation.TableField;import com.baomidou.mybatisplus.annotation.TableId;import lombok.AllArgsConstructor;import lombok.Builder;import lombok.Data;import lombok.NoArgsConstructor;import org.springframework.security.core.GrantedAuthority;import org.springframework.security.core.userdetails.UserDetails;import java.io.Serializable;import java.time.LocalDateTime;import java.util.Collection;import java.util.List;@AllArgsConstructor@NoArgsConstructor@Builder@Datapublic class Manager implements Serializable, UserDetails {    private static final long serialVersionUID = 1L;    /**    * id    */    @TableId(value = "id", type = IdType.AUTO)    private Integer id;    /**    * 账号    */    private String account;    /**    * 密码    */    private String pwd;    /**    * 身份标识    */    private Integer identity;    /**     * 是否启用     */    @TableField("enabled")    private Integer enable;    /**     * 创建时间     */    @TableField(fill = FieldFill.INSERT)    private LocalDateTime createTime;    /**     * 更新时间     */    @TableField(fill = FieldFill.INSERT_UPDATE)    private LocalDateTime updateTime;    @Override    public Collection<? extends GrantedAuthority> getAuthorities() {        return List.of((GrantedAuthority) () -> identity==1 ? "ROLE_"+ ManagerConstants.SUPER_MANAGER:"ROLE_"+ManagerConstants.COMMON_MANAGER);    }    @Override    public String getPassword() {        return pwd;    }    @Override    public String getUsername() {        return account;    }    @Override    public boolean isAccountNonExpired() {        return true;    }    @Override    public boolean isAccountNonLocked() {        return true;    }    @Override    public boolean isCredentialsNonExpired() {        return true;    }    @Override    public boolean isEnabled() {        return enable==1;    }}