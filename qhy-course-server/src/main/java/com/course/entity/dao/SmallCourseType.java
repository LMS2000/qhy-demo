package com.course.entity.dao;import com.baomidou.mybatisplus.annotation.FieldFill;import com.baomidou.mybatisplus.annotation.IdType;import com.baomidou.mybatisplus.annotation.TableField;import com.baomidou.mybatisplus.annotation.TableId;import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;import com.course.entity.vo.SmallCourseTypeVo;import com.course.entity.vo.UpLoadFileVo;import com.course.exception.CourseException;import com.course.service.Impl.SmallCourseTypeServiceImpl;import lombok.AllArgsConstructor;import lombok.Builder;import lombok.Data;import lombok.NoArgsConstructor;import java.io.Serializable;import java.time.LocalDateTime;@AllArgsConstructor@NoArgsConstructor@Data@Builderpublic class SmallCourseType implements Serializable {    private static final long serialVersionUID = 1L;    /**    * id    */    @TableId(value = "id", type = IdType.AUTO)    private Integer id;    /**    * 小分类名    */    private String name;    /**    * 所属大分类id    */    private Integer parentId;    /**     * 课程小类存储的存储桶名     */    private String bucketName;    /**    * 小分类课程封面路径    */    private String coverPath;    /**     * 小分类课程封面文件名字     */    private String coverName;    /**     * 创建时间     */    @TableField(fill = FieldFill.INSERT)    private LocalDateTime createTime;    /**     * 更新时间     */    @TableField(fill = FieldFill.INSERT_UPDATE)    private LocalDateTime updateTime;    public static void fillInfo(SmallCourseType smallcoursetype, UpLoadFileVo upLoadFileVo) {        smallcoursetype.setBucketName(upLoadFileVo.getBucketName());        smallcoursetype.setCoverName(upLoadFileVo.getPath());        smallcoursetype.setCoverPath(upLoadFileVo.getUrl());    }    public static void repeatNameCheck(SmallCourseTypeVo smallcoursetypeVo, SmallCourseTypeServiceImpl smallCourseTypeService) {        long count = smallCourseTypeService.count(new QueryWrapper<SmallCourseType>()                .eq("name", smallcoursetypeVo.getName()));        if(count>0){            throw new CourseException("课程小类名重复");        }    }}